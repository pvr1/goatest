// Code generated by goa v3.5.4, DO NOT EDIT.
//
// hellosvc endpoints
//
// Command:
// $ goa gen github.com/pvr1/goatest/design

package hellosvc

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Endpoints wraps the "hellosvc" service endpoints.
type Endpoints struct {
	Greet goa.Endpoint
}

// NewEndpoints wraps the methods of the "hellosvc" service with endpoints.
func NewEndpoints(s Service) *Endpoints {
	return &Endpoints{
		Greet: NewGreetEndpoint(s),
	}
}

// Use applies the given middleware to all the "hellosvc" service endpoints.
func (e *Endpoints) Use(m func(goa.Endpoint) goa.Endpoint) {
	e.Greet = m(e.Greet)
}

// NewGreetEndpoint returns an endpoint function that calls the method "greet"
// of service "hellosvc".
func NewGreetEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req interface{}) (interface{}, error) {
		p := req.(*GreetPayload)
		return s.Greet(ctx, p)
	}
}
