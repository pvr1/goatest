// Code generated by goa v3.5.4, DO NOT EDIT.
//
// hellosvc gRPC client CLI support package
//
// Command:
// $ goa gen github.com/pvr1/goatest/design

package client

import (
	"encoding/json"
	"fmt"

	hellosvcpb "github.com/pvr1/goatest/gen/grpc/hellosvc/pb"
	hellosvc "github.com/pvr1/goatest/gen/hellosvc"
)

// BuildGreetPayload builds the payload for the hellosvc greet endpoint from
// CLI flags.
func BuildGreetPayload(hellosvcGreetMessage string) (*hellosvc.GreetPayload, error) {
	var err error
	var message hellosvcpb.GreetRequest
	{
		if hellosvcGreetMessage != "" {
			err = json.Unmarshal([]byte(hellosvcGreetMessage), &message)
			if err != nil {
				return nil, fmt.Errorf("invalid JSON for message, \nerror: %s, \nexample of valid JSON:\n%s", err, "'{\n      \"name\": \"Iste ratione voluptatum.\"\n   }'")
			}
		}
	}
	v := &hellosvc.GreetPayload{
		Name: message.Name,
	}

	return v, nil
}
