// Code generated by goa v3.5.4, DO NOT EDIT.
//
// hellosvc gRPC server encoders and decoders
//
// Command:
// $ goa gen github.com/pvr1/goatest/design

package server

import (
	"context"

	hellosvcpb "github.com/pvr1/goatest/gen/grpc/hellosvc/pb"
	hellosvc "github.com/pvr1/goatest/gen/hellosvc"
	goagrpc "goa.design/goa/v3/grpc"
	"google.golang.org/grpc/metadata"
)

// EncodeGreetResponse encodes responses from the "hellosvc" service "greet"
// endpoint.
func EncodeGreetResponse(ctx context.Context, v interface{}, hdr, trlr *metadata.MD) (interface{}, error) {
	result, ok := v.(string)
	if !ok {
		return nil, goagrpc.ErrInvalidType("hellosvc", "greet", "string", v)
	}
	resp := NewGreetResponse(result)
	return resp, nil
}

// DecodeGreetRequest decodes requests sent to "hellosvc" service "greet"
// endpoint.
func DecodeGreetRequest(ctx context.Context, v interface{}, md metadata.MD) (interface{}, error) {
	var (
		message *hellosvcpb.GreetRequest
		ok      bool
	)
	{
		if message, ok = v.(*hellosvcpb.GreetRequest); !ok {
			return nil, goagrpc.ErrInvalidType("hellosvc", "greet", "*hellosvcpb.GreetRequest", v)
		}
	}
	var payload *hellosvc.GreetPayload
	{
		payload = NewGreetPayload(message)
	}
	return payload, nil
}
